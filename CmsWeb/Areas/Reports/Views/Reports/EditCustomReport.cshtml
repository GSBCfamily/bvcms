@model CmsWeb.Areas.Reports.ViewModels.CustomReportViewModel
@{
  // TODO: it would be really nice to use a _ViewStart.cshtml file instead of specifying this everywhere
  Layout = ViewExtensions2.TouchPointLayout();
  ViewBag.Title = "Custom Report Builder";
  ViewBag.PageHeader = "Custom Report Builder";
}
@section head{
  <style>
    .custom-columns label:hover { background-color: #f5f5f5; }
  </style>
}
<div class="row">
  <div class="col-sm-12">
    <div class="box box-responsive">
      <div class="box-content">
        @if (ViewData.ModelState.Keys.Any(k => ViewData.ModelState[k].Errors.Any()))
        {
          <div class="alert alert-danger">
            <button class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
            @Html.ValidationSummary(false, "Errors: ")
          </div>
        }
        @if (Model.CustomReportSuccessfullySaved)
        {
          <div class="alert alert-success">
            Your report was successfully saved!
          </div>
        }
        @using (Html.BeginForm("EditCustomReport", "Reports", FormMethod.Post, new {id = "edit-custom-report-form", @class = "form-horizontal"}))
        {
          @Html.HiddenFor(x => x.OrgId)
          @Html.HiddenFor(x => x.OriginalReportName)
          @Html.HiddenFor(x => x.QueryId)
          <div class="form-group">
            @Html.LabelFor(x => x.ReportName, new {@class = "col-md-4 control-label"})
            <div class="col-md-4">
              @Html.TextBoxFor(x => x.ReportName, true, htmlAttributes: new {placeholder = "Name Your Custom Report", @class = "form-control"})
              @Html.ValidationMessageFor(x => x.ReportName)
            </div>
          </div>

          if (Model.OrgId.HasValue)
          {
            <div class="form-group">
              <label class="col-md-4 control-label" for="restrictOrg">Restrict this report to this Org</label>
              <div class="col-md-4">
                <div class="checkbox">
                  <label for="restrictOrg-0">
                    @Html.CheckBoxFor(m => m.RestrictToThisOrg)
                    @Model.OrgName
                  </label>
                </div>
              </div>
            </div>
          }
          @ActionButtons()
          <div class="form-group">
            <label class="col-md-4 control-label">Report Columns</label>
            <ul class="col-md-8 sortable">
              @foreach (var c in Model.Columns)
              {
                c.BindName = Html.NameFor2(m => m.Columns);
                @Html.EditorFor(m => c)
              }
            </ul>
          </div>
          @ActionButtons()
        }
        <a style="display: none" id="run-report-link" href="@Url.Action("CustomReport", new {id = Model.QueryId, report = "___"})">(hidden link used by javascript)</a>
      </div>
    </div>
  </div>
</div>
@helper ActionButtons()
{
  <div class="form-group">
    <label class="col-md-4 control-label" for="button1id">Action</label>
    <div class="col-md-8">
      <input type="submit" id="save-report" name="save-report" class="btn btn-primary" value="Save Report"/>
      <button type="submit" id="run-report" name="run-report" class="btn btn-default"><i class="fa fa-cloud-download"></i>Run Report</button>
    </div>
  </div>
}

@section scripts{
  @Fingerprint.Script("/Content/touchpoint/lib/html.sortable.min.js")
  <script type="text/javascript">
    (function () {
      $('.sortable').sortable();
      var $form = $('#edit-custom-report-form');
      $form.validate();

      $('#ReportName').rules('add', {
        required: true,
        pattern: /^[A-Za-z0-9 ]+$/,
        messages: {
          required: "The report name is required.",
          pattern: "The report name can only contain alphanumeric characters. (a-z, 0-9)"
        }
      });

      var lastChecked = null;
      $('#run-report').click(function(e) {
        e.preventDefault();

        if ($form.valid()) {
          $.post($form.attr('action'), $form.serialize()).then(function() {
            $('#OriginalReportName').val($('#ReportName').val());
            var runLink = $('#run-report-link').attr('href').replace('___', encodeURIComponent($('#ReportName').val()));
            window.location = runLink;
          });
        }
      });

      $('input[type="checkbox"]').click(function(e) {
        if (e.shiftKey && lastChecked !== null) {
          var start = $('input[type="checkbox"]').index(this);
          var end = $('input[type="checkbox"]').index(lastChecked);
          $('input[type="checkbox"]').slice(Math.min(start, end), Math.max(start, end) + 1).prop("checked", true);
        }

        lastChecked = this;
      });
    })();
  </script>
}