@using System.Configuration
@using CmsData
@using CmsData.Codes
@using CmsWeb
@model CmsWeb.Areas.Main.Models.MassEmailer
@{
    ViewBag.Title = "Compose";
    ViewBag.PageHeader = "Compose Email";
    Layout = ViewExtensions2.TouchPointLayout();
    int tid = ViewBag.TemplateID;
    var c = ViewExtensions2.GetContent(tid);
}
@section head
{
    @ViewExtensions2.FroalaEditorCss()
    @Fingerprint.Css("/Content/touchpoint/lib/select2/css/select2.css")
    @Fingerprint.Css("/Content/touchpoint/lib/select2/css/select2-bootstrap.css")
    <style>
        #s2id_Recipients {
            max-height: 60px !important;
            overflow-y: scroll !important;
        }
    </style>
}
<div class="row">
    <div class="col-md-10 col-lg-8">
    @if (!Model.OrgId.HasValue)
    {
        <div class="alert alert-info alert-dismissible">
            <button type="button" class="close" data-dismiss="alert"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
        <strong>Please Note:</strong>
        Your recipient list has been saved in a tag, so you can run queries in other tabs.
        But you should not compose two emails simultaneously as one will overwrite the other.
        </div>
    }
        <div class="box box-responsive">
            <div class="box-content">
                <form class="form-horizontal" id="SendEmail" method="post">
                    @Html.Hidden("TagId")
                    @Html.Hidden("Host")
                    @Html.Hidden("CmsHost")
                    @Html.Hidden("Count", Model.Count)
                    @Html.Hidden("wantParents", Model.wantParents)
                    @Html.Hidden("ccparents", Model.CcParents)
                    @Html.Hidden("roleid", c.RoleID)
                    @Html.Hidden("orgid", Model.OrgId)
                    @Html.Hidden("noDuplicates", Model.noDuplicates)
                    <input type="hidden" name="saveid" value="@(c.TypeID == ContentTypeCode.TypeEmailTemplate ? 0 : c.Id )" />
                    <input type="hidden" id="body" name="body" />
                    <input type="hidden" id="name" name="name" value="@c.Name" />
                    <div class="form-group">
                        <label for="FromAddress" class="col-sm-2 control-label">From:</label>
                        <div class="col-sm-10">
                            @Html.DropDownList("FromAddress", Model.EmailFroms(), new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="inputEmail3" class="col-sm-2 control-label">To:</label>
                        <div class="col-sm-10">
              @if (Model.OrgId.HasValue)
              {
                var org = DbUtil.Db.LoadOrganizationById(Model.OrgId);
                <p class="alert alert-warning">
                  This email will be sent to all current members of <strong>@org.OrganizationName</strong>.
                  The recipient list will be finalized when the email is actually sent.
                  Currently, this organization has <strong>@org.MemberCount members</strong>.
                </p>
              }
              else
              {
                            <select multiple="multiple" id="Recipients" name="Recipients" class="form-control">
                                @if (Model.Recipients.Count() > 500)
                                {
                    <option value="" selected="selected">
                      @Model.Count people@(Model.wantParents ? " including parents." : ".")
                    </option>
                                }
                                else
                                {
                                    foreach (var recipient in Model.Recipients)
                                    {
                                        <option value="@recipient" selected="selected">@recipient</option>
                                    }
                                }
                            </select>
                if (Model.Recipients.Count() <= 500)
                            {
                  <p class="help-block">
                    @Model.Count
                    @( Model.Count != 1 ? "people" : "person")
                    @(Model.wantParents ? " including parents." : ".")
                  </p>
                }
                            }
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="Subject" class="col-sm-2 control-label">Subject:</label>
                        <div class="col-sm-10">
                            <input name="Subject" id="Subject" size="75" value="@(c.TypeID == ContentTypeCode.TypeEmailTemplate ? "" : c.Title)" class="form-control" />
                        </div>
                    </div>
                    @if ((User.IsInRole("ScheduleEmails") || User.IsInRole("Edit")) && ConfigurationManager.AppSettings["UseEmailScheduler"] == "true")
                    {
                        <div class="form-group">
                            <label for="Schedule" class="col-sm-2 control-label">Schedule:</label>
                            <div class="col-sm-10">
                                <div class="input-group scheduleDateTime">
                                    @Html.TextBox("Schedule", Model.Schedule, new { @class = "form-control", placeholder = "Immediately" })<span class="input-group-addon hidden-xs hidden-sm"><i class="fa fa-calendar"></i></span>
                                    @Html.Hidden("ScheduleIso", Model.Schedule, new { disabled = "disabled", placeholder = "Immediately" })
                                </div>
                                <p class="help-block">Note: Time is Central Time (CST)</p>
                            </div>
                        </div>
                    }
                    <div class="form-group">
                        <div class="col-sm-offset-2 col-sm-10">
                            <label class="checkbox-inline">
                                @Html.CheckBox("PublicViewable") Publicly viewable?
                            </label>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-sm-offset-2 col-sm-10">
              @if (Util2.UseNewEditor)
              {
                            <script type="text/javascript">
                                function iframeLoaded() {
                                    var iFrameID = document.getElementById('email-body');
                                    if (iFrameID) {
                                        // here you can make the height, I delete it first, then I make it again
                                        iFrameID.height = "";
                                        iFrameID.height = iFrameID.contentWindow.document.body.scrollHeight + 20 + "px";
                                    }
                                }
                            </script>
                <iframe src="/Email/EmailBody/@tid" frameborder="0" onload=" iframeLoaded() " style="width: 100%;" id="email-body" name="email-body"></iframe>
              }
              else
              {
                <iframe src="/Email/EmailBody/@tid" height="600" frameborder="0" style="width: 100%; height: 600px;" id="email-body" name="email-body"></iframe>
              }
                        </div>
                    </div>
                    <div class="form-group hidden-xs">
                        <div class="col-sm-offset-2 col-sm-10">
                            <div class="pull-right">
                                <input type="button" class="btn btn-default SaveDraft" savetype="@( c.TypeID == ContentTypeCode.TypeEmailTemplate ? 0 : 1 )" value="@( c.TypeID == ContentTypeCode.TypeEmailTemplate ? "Save As Draft" : "Save Current Draft" )" />
                                <a href="#" class="btn btn-default TestSend">Send Test Email (To Me)</a>
                                <button type="button" class="btn btn-primary Send"><i class="fa fa-paper-plane"></i> Send</button>
                            </div>
                        </div>
                    </div>
                    <div class="visible-xs-block">
                        <button type="button" class="btn btn-primary btn-block Send"><i class="fa fa-paper-plane"></i> Send</button>
                        <a href="#" class="btn btn-default btn-block TestSend">Send Test Email (To Me)</a>
                        <input type="button" class="btn btn-default btn-block SaveDraft" savetype="@( c.TypeID == ContentTypeCode.TypeEmailTemplate ? 0 : 1 )" value="@( c.TypeID == ContentTypeCode.TypeEmailTemplate ? "Save As Draft" : "Save Current Draft" )" />
                    </div>
          <br />
                </form>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="draft-modal">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title">Save Draft</h4>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <label for="newName" class="control-label">Draft Name</label>
                    <input type="text" id="newName" name="newName" class="form-control" />
                </div>
            </div>
            <div class="modal-footer">
                <input type="button" value="Cancel" class="btn btn-default" data-dismiss="modal" />
                <input id="SaveDraftButton" type="submit" value="Submit" class="btn btn-primary" />
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="editor-modal" style="overflow-y: hidden !important;">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-body">
                <div class="row">
                    <div class="col-sm-12">
                        <div class="pull-right" style="margin-bottom: 5px;">
                            <a href="http://docs.touchpointsoftware.com/EmailTexting/EmailReplacements.html" target="_blank" class="btn btn-default btn-sm"><i class="fa fa-question-circle"></i> Email Replacement Codes</a>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-12">
                        <form>
                            <textarea id="htmleditor" name="htmleditor" class="form-control" rows="15"></textarea>
                        </form>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <input type="button" value="Cancel" class="btn btn-default" data-dismiss="modal" />
                <input type="submit" value="Save" class="btn btn-primary" id="save-edit" />
            </div>
        </div>
    </div>
</div>
@section scripts
{
  @Fingerprint.Script("/Content/touchpoint/lib/select2/js/select2.min.js")
  @if (Util2.UseNewEditor)
  {
    @ViewExtensions2.FroalaEditorScripts()
    @Fingerprint.Script("/Content/touchpoint/js/email/compose.js")
  }
  else
  {
    @ViewExtensions2.CKEditor()
    @Fingerprint.Script("/scripts/email/compose.js")
  }
    <script type="text/javascript">
        $(function () {
            var extraSmallDevice = $('.device-xs').is(':visible');
            var smallDevice = $('.device-sm').is(':visible');
            if (extraSmallDevice || smallDevice) {
                $('#Schedule').val($('#ScheduleIso').val());
                $('#Schedule').attr('type', 'datetime-local');
            } else {
                $("div.scheduleDateTime").datetimepicker({ format: 'MM/DD/YYYY h:mm A', widgetPositioning: { horizontal: 'left' }});
            }
        });
    </script>
}
